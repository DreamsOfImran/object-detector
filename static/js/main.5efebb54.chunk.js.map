{"version":3,"sources":["utilities.js","App.js","index.js"],"names":["drawRect","detections","ctx","forEach","prediction","x","y","width","height","text","color","strokeStyle","font","fillStyle","beginPath","fillText","rect","stroke","App","webcamRef","useRef","canvasRef","runCoco","a","cocossd","net","setInterval","detect","current","video","readyState","videoWidth","videoHeight","obj","getContext","useEffect","className","ref","muted","style","position","marginLeft","marginRight","left","right","textAlign","zIndex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oYAAaA,EAAW,SAACC,EAAYC,GACnCD,EAAWE,SAAQ,SAAAC,GAAe,IAAD,cACDA,EAAU,KADT,GACxBC,EADwB,KACrBC,EADqB,KAClBC,EADkB,KACXC,EADW,KAEzBC,EAAOL,EAAU,MAEjBM,EAAQ,QACdR,EAAIS,YAAcD,EAClBR,EAAIU,KAAO,aACXV,EAAIW,UAAYH,EAEhBR,EAAIY,YACJZ,EAAIa,SAASN,EAAMJ,EAAGC,GACtBJ,EAAIc,KAAKX,EAAGC,EAAGC,EAAOC,GACtBN,EAAIe,a,iBCyEOC,EA9EH,WACV,IAAMC,EAAYC,iBAAO,MACnBC,EAAYD,iBAAO,MAEnBE,EAAO,uCAAG,4BAAAC,EAAA,sEACIC,SADJ,OACRC,EADQ,OAGdC,aAAY,WACVC,EAAOF,KACN,IALW,2CAAH,qDAQPE,EAAM,uCAAG,WAAOF,GAAP,uBAAAF,EAAA,yDAEkB,qBAAtBJ,EAAUS,SACK,OAAtBT,EAAUS,SAC6B,IAAvCT,EAAUS,QAAQC,MAAMC,WAJb,wBAMLD,EAAQV,EAAUS,QAAQC,MAC1BE,EAAaZ,EAAUS,QAAQC,MAAME,WACrCC,EAAcb,EAAUS,QAAQC,MAAMG,YAE5Cb,EAAUS,QAAQC,MAAMtB,MAAQwB,EAChCZ,EAAUS,QAAQC,MAAMrB,OAASwB,EAEjCX,EAAUO,QAAQrB,MAAQwB,EAC1BV,EAAUO,QAAQpB,OAASwB,EAdhB,UAgBOP,EAAIE,OAAOE,GAhBlB,QAgBLI,EAhBK,OAkBL/B,EAAMmB,EAAUO,QAAQM,WAAW,MAEzClC,EAASiC,EAAK/B,GApBH,4CAAH,sDA4BZ,OAJAiC,qBAAU,WACRb,MACC,IAGD,qBAAKc,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAAC,IAAD,CACEC,IAAKlB,EACLmB,OAAO,EACPC,MAAO,CACLC,SAAU,WACVC,WAAY,OACZC,YAAa,OACbC,KAAM,EACNC,MAAO,EACPC,UAAW,SACXC,OAAQ,EACRvC,MAAO,IACPC,OAAQ,OAIZ,wBACE6B,IAAKhB,EACLkB,MAAO,CACLC,SAAU,WACVC,WAAY,OACZC,YAAa,OACbC,KAAM,EACNC,MAAO,EACPC,UAAW,SACXC,OAAQ,EACRvC,MAAO,IACPC,OAAQ,aCzEpBuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5efebb54.chunk.js","sourcesContent":["export const drawRect = (detections, ctx) => {\n  detections.forEach(prediction => {\n    const [x, y, width, height] = prediction['bbox']\n    const text = prediction['class']\n\n    const color = 'green'\n    ctx.strokeStyle = color\n    ctx.font = '18px Arial'\n    ctx.fillStyle = color\n\n    ctx.beginPath()\n    ctx.fillText(text, x, y)\n    ctx.rect(x, y, width, height)\n    ctx.stroke()\n  })\n}","import React, { useEffect, useRef } from 'react'\nimport Webcam from 'react-webcam'\nimport * as tf from '@tensorflow/tfjs'\nimport * as cocossd from '@tensorflow-models/coco-ssd'\nimport { drawRect } from './utilities'\n\nimport './App.css'\n\nconst App = () => {\n  const webcamRef = useRef(null)\n  const canvasRef = useRef(null)\n\n  const runCoco = async () => {\n    const net = await cocossd.load()\n\n    setInterval(() => {\n      detect(net)\n    }, 10);\n  }\n\n  const detect = async (net) => {\n    if(\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      const video = webcamRef.current.video\n      const videoWidth = webcamRef.current.video.videoWidth\n      const videoHeight = webcamRef.current.video.videoHeight\n\n      webcamRef.current.video.width = videoWidth\n      webcamRef.current.video.height = videoHeight\n\n      canvasRef.current.width = videoWidth\n      canvasRef.current.height = videoHeight\n\n      const obj = await net.detect(video)\n\n      const ctx = canvasRef.current.getContext(\"2d\")\n\n      drawRect(obj, ctx)\n    }\n  }\n\n  useEffect(() => {\n    runCoco()\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Webcam\n          ref={webcamRef}\n          muted={true}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zIndex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n\n        <canvas\n          ref={canvasRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zIndex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}